# Generated by Django 2.2.17 on 2021-01-25 06:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('zipcode', models.CharField(blank=True, default='', max_length=5, null=True, verbose_name='Zip Code')),
                ('phone_num', models.CharField(blank=True, max_length=15, null=True, verbose_name='Mobile Number')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Fundraiser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('goal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fundraiser_date', models.DateTimeField(verbose_name='Start Date:')),
                ('image', models.ImageField(null=True, upload_to='items/images')),
                ('description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='About the fundraiser:')),
                ('cause_type', models.CharField(choices=[('Education', 'Education'), ('Emergency', 'Emergency'), ('Medical', 'Medical'), ('Non-profit', 'Non-profit')], max_length=128)),
                ('for_whom_type', models.CharField(choices=[('Myself', 'Myself'), ('Friend', 'Friend'), ('Non-profit', 'Non-profit')], max_length=128, verbose_name='Raising Fundraiser for WHOM:')),
                ('img', models.ImageField(null=True, upload_to='fundraisers/images')),
                ('flag', models.BooleanField(default=False, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fundraiser_customer_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fundraiser',
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('method', models.CharField(choices=[('Credit', 'Credit'), ('Debit', 'Debit')], max_length=128)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('fundraiser_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_fundraiser_id', to='customer.Fundraiser')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donation_customer_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donation',
            },
        ),
    ]
